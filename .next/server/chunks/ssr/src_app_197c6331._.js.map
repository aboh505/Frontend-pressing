{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/authHelper.js"],"sourcesContent":["'use client';\n\n/**\n * Service d'authentification sécurisé pour interagir avec l'API backend\n * Version simplifiée\n */\n\n/**\n * Vérifie si le code s'exécute côté client (navigateur)\n * @returns {boolean} true si côté client, false si côté serveur\n */\nconst isClient = typeof window !== 'undefined';\n\n/**\n * Service d'authentification simplifié\n */\nconst authHelper = {\n  /**\n   * Récupère l'utilisateur depuis le localStorage\n   */\n  getCurrentUser: () => {\n    if (!isClient) return null;\n    \n    try {\n      const userStr = window.localStorage.getItem('user');\n      if (!userStr) return null;\n      return JSON.parse(userStr);\n    } catch (error) {\n      console.error('Erreur lors de la récupération utilisateur:', error);\n      return null;\n    }\n  },\n  \n  /**\n   * Récupère le token depuis le localStorage\n   */\n  getToken: () => {\n    if (!isClient) return null;\n    \n    try {\n      return window.localStorage.getItem('token');\n    } catch (error) {\n      console.error('Erreur lors de la récupération du token:', error);\n      return null;\n    }\n  },\n  \n  /**\n   * Vérifie si l'utilisateur est authentifié\n   */\n  isAuthenticated: () => {\n    return !!authHelper.getToken();\n  },\n  \n  /**\n   * Stocke les données utilisateur\n   */\n  setUserData: (user, token) => {\n    if (!isClient) return;\n    \n    try {\n      window.localStorage.setItem('token', token);\n      window.localStorage.setItem('user', JSON.stringify(user));\n    } catch (error) {\n      console.error('Erreur lors du stockage des données utilisateur:', error);\n    }\n  },\n  \n  /**\n   * Supprime les données utilisateur\n   */\n  clearUserData: () => {\n    if (!isClient) return;\n    \n    try {\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Erreur lors de la suppression des données utilisateur:', error);\n    }\n  }\n};\n\nexport default authHelper;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;CAGC,GAED;;;CAGC,GACD,MAAM,WAAW,gBAAkB;AAEnC;;CAEC,GACD,MAAM,aAAa;IACjB;;GAEC,GACD,gBAAgB;QACd,wCAAe,OAAO;;IAUxB;IAEA;;GAEC,GACD,UAAU;QACR,wCAAe,OAAO;;IAQxB;IAEA;;GAEC,GACD,iBAAiB;QACf,OAAO,CAAC,CAAC,WAAW,QAAQ;IAC9B;IAEA;;GAEC,GACD,aAAa,CAAC,MAAM;QAClB,wCAAe;;IAQjB;IAEA;;GAEC,GACD,eAAe;QACb,wCAAe;;IAQjB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/authService.js"],"sourcesContent":["'use client';\n\n/**\n * Service d'authentification pour interagir avec l'API backend\n */\n\n// URL de base de l'API\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\n\n// Import du helper d'authentification\nimport authHelper from './authHelper';\n\n/**\n * Service d'authentification simplifié\n */\nconst authService = {\n  /**\n   * Inscription d'un nouvel utilisateur\n   * @param {Object} userData - Données de l'utilisateur\n   * @returns {Promise<Object>} - Résultat de l'inscription\n   */\n  register: async (userData) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de l\\'inscription' };\n      }\n      \n      return { success: true, message: 'Inscription réussie' };\n    } catch (error) {\n      console.error('Erreur register:', error);\n      return { success: false, error: 'Erreur lors de l\\'inscription' };\n    }\n  },\n  \n  /**\n   * Connexion d'un utilisateur\n   * @param {string} email - Email de l'utilisateur\n   * @param {string} password - Mot de passe de l'utilisateur\n   * @returns {Promise<Object>} - Résultat de la connexion\n   */\n  login: async (email, password) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la connexion' };\n      }\n      \n      // Stocker le token et les informations utilisateur\n      authHelper.setUserData(data.user, data.token);\n      \n      return { success: true, user: data.user };\n    } catch (error) {\n      console.error('Erreur login:', error);\n      return { success: false, error: 'Erreur lors de la connexion' };\n    }\n  },\n  \n  /**\n   * Déconnexion de l'utilisateur\n   */\n  logout: () => {\n    authHelper.clearUserData();\n  },\n  \n  /**\n   * Récupération de l'utilisateur actuel\n   * @returns {Object|null} - Utilisateur connecté ou null\n   */\n  getCurrentUser: () => {\n    return authHelper.getCurrentUser();\n  },\n  \n  /**\n   * Vérification si l'utilisateur est authentifié\n   * @returns {boolean} - true si l'utilisateur est authentifié\n   */\n  isAuthenticated: () => {\n    return authHelper.isAuthenticated();\n  },\n  \n  /**\n   * Récupération du token d'authentification\n   * @returns {string|null} - Token d'authentification\n   */\n  getToken: () => {\n    return authHelper.getToken();\n  }\n};\n\nexport default authService;\n"],"names":[],"mappings":";;;AASA,sCAAsC;AACtC;AAVA;AAEA;;CAEC,GAED,uBAAuB;AACvB,MAAM,UAAU,iEAAmC;;AAKnD;;CAEC,GACD,MAAM,cAAc;IAClB;;;;GAIC,GACD,UAAU,OAAO;QACf,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,cAAc,CAAC,EAAE;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,OAAO,IAAI;gBAA0B;YAC5E;YAEA,OAAO;gBAAE,SAAS;gBAAM,SAAS;YAAsB;QACzD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAgC;QAClE;IACF;IAEA;;;;;GAKC,GACD,OAAO,OAAO,OAAO;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,WAAW,CAAC,EAAE;gBACpD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,OAAO,IAAI;gBAAwB;YAC1E;YAEA,mDAAmD;YACnD,oIAAA,CAAA,UAAU,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK;YAE5C,OAAO;gBAAE,SAAS;gBAAM,MAAM,KAAK,IAAI;YAAC;QAC1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAA8B;QAChE;IACF;IAEA;;GAEC,GACD,QAAQ;QACN,oIAAA,CAAA,UAAU,CAAC,aAAa;IAC1B;IAEA;;;GAGC,GACD,gBAAgB;QACd,OAAO,oIAAA,CAAA,UAAU,CAAC,cAAc;IAClC;IAEA;;;GAGC,GACD,iBAAiB;QACf,OAAO,oIAAA,CAAA,UAAU,CAAC,eAAe;IACnC;IAEA;;;GAGC,GACD,UAAU;QACR,OAAO,oIAAA,CAAA,UAAU,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/config/api.js"],"sourcesContent":["\"use client\";\n\n// Configuration de l'API\nconst config = {\n  // URL de base de l'API - utilise l'API locale en développement\n  apiBaseUrl: typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    ? \"http://localhost:5000/api\"\n    : process.env.NEXT_PUBLIC_API_URL || \"https://pressing-api.onrender.com/api\",\n  \n  // URL de secours en cas de besoin\n  fallbackApiUrl: \"https://pressing-api.onrender.com/api\"\n};\n\nexport default config;\n"],"names":[],"mappings":";;;AAAA;AAEA,yBAAyB;AACzB,MAAM,SAAS;IACb,+DAA+D;IAC/D,YAAY,6EAER,iEAAmC;IAEvC,kCAAkC;IAClC,gBAAgB;AAClB;uCAEe","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/serviceClient.js"],"sourcesContent":["'use client';\n\n/**\n * Service pour gérer les services de pressing\n */\n\nimport config from '../config/api';\nimport authService from './authService';\n\nconst API_URL = config.apiBaseUrl;\n\n/**\n * Service pour gérer les services de pressing\n */\nconst serviceClient = {\n  /**\n   * Créer un nouveau service\n   * @param {Object} serviceData - Données du service\n   * @returns {Promise<Object>} - Résultat de la création\n   */\n  createService: async (serviceData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(serviceData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { \n          success: false, \n          error: data.message || 'Échec de la création du service',\n          details: data.error \n        };\n      }\n      \n      return { success: true, data: data.data, message: data.message };\n    } catch (error) {\n      console.error('Erreur createService:', error);\n      return { success: false, error: 'Erreur lors de la création du service' };\n    }\n  },\n  \n  /**\n   * Récupérer tous les services du client\n   * @returns {Promise<Object>} - Liste des services\n   */\n  getClientServices: async () => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la récupération des services' };\n      }\n      \n      return { success: true, data: data.data };\n    } catch (error) {\n      console.error('Erreur getClientServices:', error);\n      return { success: false, error: 'Erreur lors de la récupération des services' };\n    }\n  },\n  \n  /**\n   * Récupérer un service spécifique\n   * @param {string} serviceId - ID du service\n   * @returns {Promise<Object>} - Détails du service\n   */\n  getServiceById: async (serviceId) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la récupération du service' };\n      }\n      \n      return { success: true, data: data.data };\n    } catch (error) {\n      console.error('Erreur getServiceById:', error);\n      return { success: false, error: 'Erreur lors de la récupération du service' };\n    }\n  },\n\n  /**\n   * Récupérer tous les types de services disponibles\n   * @param {Object} params - Paramètres optionnels (pagination, catégorie, etc.)\n   * @returns {Promise<Object>} - Liste des types de services\n   */\n  getServiceTypes: async (params = {}) => {\n    try {\n      // Construction de l'URL avec paramètres de requête\n      let url = `${API_URL}/service-types`;\n      const queryParams = new URLSearchParams();\n      \n      // Ajouter les paramètres s'ils sont fournis\n      if (params.categorie) queryParams.append('categorie', params.categorie);\n      if (params.page) queryParams.append('page', params.page);\n      if (params.limit) queryParams.append('limit', params.limit);\n      if (params.search) queryParams.append('search', params.search);\n      \n      // Ajouter les paramètres à l'URL si nécessaire\n      const queryString = queryParams.toString();\n      if (queryString) {\n        url += `?${queryString}`;\n      }\n      \n      // Les types de services sont publics, pas besoin de token\n      const response = await fetch(url);\n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { \n          success: false, \n          error: data.message || 'Échec de la récupération des types de services',\n          details: data.error \n        };\n      }\n      \n      return { success: true, data: data.data || data, pagination: data.pagination };\n    } catch (error) {\n      console.error('Erreur getServiceById:', error);\n      return { success: false, error: 'Erreur lors de la récupération du service' };\n    }\n  },\n  \n  /**\n   * Mettre à jour un service\n   * @param {string} serviceId - ID du service\n   * @param {Object} serviceData - Nouvelles données du service\n   * @returns {Promise<Object>} - Résultat de la mise à jour\n   */\n  updateService: async (serviceId, serviceData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(serviceData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la mise à jour du service' };\n      }\n      \n      return { success: true, data: data.data, message: data.message };\n    } catch (error) {\n      console.error('Erreur updateService:', error);\n      return { success: false, error: 'Erreur lors de la mise à jour du service' };\n    }\n  },\n  \n  /**\n   * Annuler un service\n   * @param {string} serviceId - ID du service\n   * @returns {Promise<Object>} - Résultat de l'annulation\n   */\n  cancelService: async (serviceId) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de l\\'annulation du service' };\n      }\n      \n      return { success: true, message: data.message };\n    } catch (error) {\n      console.error('Erreur cancelService:', error);\n      return { success: false, error: 'Erreur lors de l\\'annulation du service' };\n    }\n  },\n  \n  /**\n   * Mettre à jour les informations de sécurité du client\n   * @param {Object} securityData - Données de sécurité\n   * @returns {Promise<Object>} - Résultat de la mise à jour\n   */\n  updateSecurity: async (securityData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/users/security`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(securityData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la mise à jour des informations de sécurité' };\n      }\n      \n      return { success: true, message: data.message };\n    } catch (error) {\n      console.error('Erreur updateSecurity:', error);\n      return { success: false, error: 'Erreur lors de la mise à jour des informations de sécurité' };\n    }\n  }\n};\n\nexport default serviceClient;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/reservation/parametres/page.jsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  FaUser, FaBell, FaLock, FaMapMarkerAlt, FaMobile, \n  FaEnvelope, FaSave, FaToggleOn, FaToggleOff, FaSpinner,\n  FaEye, FaEyeSlash\n} from 'react-icons/fa';\nimport authService from '../../services/authService';\nimport serviceClient from '../../services/serviceClient';\n\nexport default function Page() {\n  // États pour les formulaires\n  const [profileData, setProfileData] = useState({\n    nom: '',\n    prenom: '',\n    email: '',\n    telephone: '',\n    adresse: ''\n  });\n\n  const [securite, setSecurite] = useState({\n    motDePasse: '',\n    nouveauMotDePasse: '',\n    confirmationMotDePasse: ''\n  });\n  \n  // États pour la visibilité des mots de passe\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  \n  // États pour gérer les chargements et les erreurs\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  \n  // Vérifier si l'utilisateur est authentifié et charger ses données\n  useEffect(() => {\n    const checkAuth = () => {\n      const isAuth = authService.isAuthenticated();\n      setIsAuthenticated(isAuth);\n      \n      if (isAuth) {\n        const user = authService.getCurrentUser();\n        if (user) {\n          setProfileData({\n            nom: user.nom || '',\n            prenom: user.prenom || '',\n            email: user.email || '',\n            telephone: user.telephone || '',\n            adresse: user.adresse || ''\n          });\n        }\n      }\n    };\n    \n    checkAuth();\n  }, []);\n\n  // Gestionnaires d'événements\n  const handleProfileChange = (e) => {\n    const { name, value } = e.target;\n    setProfileData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSecuriteChange = (e) => {\n    const { name, value } = e.target;\n    setSecurite(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleProfileSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!isAuthenticated) {\n      setError('Vous devez être connecté pour modifier votre profil');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      // Note: Cette fonctionnalité n'est pas encore implémentée dans l'API\n      // Simulons une mise à jour réussie pour le moment\n      setTimeout(() => {\n        setSuccess('Profil mis à jour avec succès !');\n        setIsLoading(false);\n      }, 1000);\n    } catch (error) {\n      setError('Une erreur est survenue lors de la mise à jour du profil');\n      setIsLoading(false);\n    }\n  };\n\n  const handleSecuriteSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!isAuthenticated) {\n      setError('Vous devez être connecté pour modifier votre mot de passe');\n      return;\n    }\n    \n    // Validation des mots de passe\n    if (!securite.motDePasse) {\n      setError('Veuillez entrer votre mot de passe actuel');\n      return;\n    }\n    \n    if (!securite.nouveauMotDePasse) {\n      setError('Veuillez entrer un nouveau mot de passe');\n      return;\n    }\n    \n    if (securite.nouveauMotDePasse !== securite.confirmationMotDePasse) {\n      setError('Les mots de passe ne correspondent pas !');\n      return;\n    }\n    \n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      const result = await serviceClient.updateSecurity({\n        currentPassword: securite.motDePasse,\n        newPassword: securite.nouveauMotDePasse\n      });\n      \n      if (result.success) {\n        setSuccess('Mot de passe modifié avec succès !');\n        setSecurite({ motDePasse: '', nouveauMotDePasse: '', confirmationMotDePasse: '' });\n      } else {\n        setError(result.error || 'Une erreur est survenue lors de la modification du mot de passe');\n      }\n    } catch (error) {\n      setError('Une erreur est survenue lors de la modification du mot de passe');\n      console.error('Exception:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"mt-16 p-6 space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Panneau de navigation des paramètres */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"bg-white p-6 rounded-lg shadow\">\n            <h2 className=\"text-xl font-bold mb-4\">Paramètres</h2>\n            <nav>\n              <ul className=\"space-y-2\">\n                {/* <li>\n                  <a href=\"#profile\" className=\"flex items-center p-3 bg-green-50 text-green-700 rounded-lg\">\n                    <FaUser className=\"mr-3\" />\n                    <span>Profil Personnel</span>\n                  </a>\n                </li> */}\n            \n                <li>\n                  <a href=\"#security\" className=\"flex items-center p-3 hover:bg-gray-50 rounded-lg\">\n                    <FaLock className=\"mr-3\" />\n                    <span>Sécurité</span>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n\n        {/* Contenu principal des paramètres */}\n        <div className=\"lg:col-span-2 space-y-6\">\n       \n\n          {/* Section Sécurité */}\n          <div id=\"security\" className=\"bg-white p-6 rounded-lg shadow\">\n            <h2 className=\"text-xl font-bold mb-4\">Sécurité du Compte</h2>\n            \n            {!isAuthenticated ? (\n              <div className=\"p-4 bg-amber-50 text-amber-700 rounded-md\">\n                Vous devez être connecté pour modifier vos paramètres de sécurité.\n              </div>\n            ) : (\n              <form onSubmit={handleSecuriteSubmit} className=\"space-y-4\">\n                {error && (\n                  <div className=\"p-3 bg-red-50 rounded border border-red-200 text-red-700\">\n                    {error}\n                  </div>\n                )}\n                \n                {success && (\n                  <div className=\"p-3 bg-green-50 rounded border border-green-200 text-green-700\">\n                    {success}\n                  </div>\n                )}\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Mot de passe actuel</label>\n                  <div className=\"relative\">\n                    <input\n                      type={showCurrentPassword ? \"text\" : \"password\"}\n                      name=\"motDePasse\"\n                      value={securite.motDePasse}\n                      onChange={handleSecuriteChange}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                    />\n                    <div \n                      onClick={() => setShowCurrentPassword(!showCurrentPassword)}\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 cursor-pointer\"\n                    >\n                      {showCurrentPassword ? (\n                        <FaEyeSlash className=\"text-gray-500 \" />\n                      ) : (\n                        <FaEye className=\"text-gray-500 \" />\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nouveau mot de passe</label>\n                  <div className=\"relative\">\n                    <input\n                      type={showNewPassword ? \"text\" : \"password\"}\n                      name=\"nouveauMotDePasse\"\n                      value={securite.nouveauMotDePasse}\n                      onChange={handleSecuriteChange}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                    />\n                    <div \n                      onClick={() => setShowNewPassword(!showNewPassword)}\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 cursor-pointer\"\n                    >\n                      {showNewPassword ? (\n                        <FaEyeSlash className=\"text-gray-500 \" />\n                      ) : (\n                        <FaEye className=\"text-gray-500 \" />\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Confirmer le nouveau mot de passe</label>\n                  <div className=\"relative\">\n                    <input\n                      type={showConfirmPassword ? \"text\" : \"password\"}\n                      name=\"confirmationMotDePasse\"\n                      value={securite.confirmationMotDePasse}\n                      onChange={handleSecuriteChange}\n                      className=\"block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                    />\n                    <div \n                      onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                      className=\"absolute inset-y-0 right-0 flex items-center pr-3 cursor-pointer\"\n                    >\n                      {showConfirmPassword ? (\n                        <FaEyeSlash className=\"text-gray-500 \" />\n                      ) : (\n                        <FaEye className=\"text-gray-500 \" />\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end\">\n                  <button\n                    type=\"submit\"\n                    disabled={isLoading}\n                    className=\"flex items-center px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                  >\n                    {isLoading ? (\n                      <>\n                        <FaSpinner className=\"animate-spin mr-2\" />\n                        Traitement...\n                      </>\n                    ) : (\n                      <>\n                        <FaLock className=\"mr-2\" />\n                        Modifier le mot de passe\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}