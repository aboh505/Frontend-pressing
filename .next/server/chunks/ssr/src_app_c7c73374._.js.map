{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/data/tarifsData.js"],"sourcesContent":["\"use client\";\n\n// Données des tarifs pour les différentes catégories de vêtements\nexport const tarifsData = {\n  hauts: [\n    { nom: \"Blouson\", prix: 1500 },\n    { nom: \"Chemise Haut 1pc\", prix: 1000 },\n    { nom: \"Chemise\", prix: 900 },\n    { nom: \"Chemise Délicate\", prix: 1200 },\n    { nom: \"Chemise Jean\", prix: 1200 },\n    { nom: \"Chemisier\", prix: 900 },\n    { nom: \"Gandoura Haut 1pc\", prix: 1500 },\n    { nom: \"Gilet Costume\", prix: 1000 },\n    { nom: \"Haut Dentelle\", prix: 1200 },\n    { nom: \"Haut Plissé\", prix: 1200 },\n    { nom: \"Haut Perlé\", prix: 1200 },\n    { nom: \"Haut Simple\", prix: 900 },\n    { nom: \"Maillot Sport\", prix: 700 },\n    { nom: \"Polo / T-Shirt\", prix: 800 },\n    { nom: \"Pull\", prix: 1200 },\n    { nom: \"Veste Costume\", prix: 1500 },\n    { nom: \"Veste Jean\", prix: 1500 }\n  ],\n  ensembles: [\n    { nom: \"Blouse Blanche\", prix: 2000 },\n    { nom: \"Blouse 2pc\", prix: 2000 },\n    { nom: \"Combinaison 1pc\", prix: 2000 },\n    { nom: \"Costume 2pc\", prix: 2500 },\n    { nom: \"Gandoura 3pc\", prix: 3500 },\n    { nom: \"Kimono 2pc\", prix: 2000 },\n    { nom: \"Kimono 3pc\", prix: 3500 },\n    { nom: \"Pagne 2pc\", prix: 2000 },\n    { nom: \"Pagne 3pc\", prix: 2500 },\n    { nom: \"Robe Cocktail\", prix: 3000 },\n    { nom: \"Robe Dentelle\", prix: 3000 },\n    { nom: \"Robe Kaba\", prix: 1800 },\n    { nom: \"Robe Mariage\", prix: 10000 },\n    { nom: \"Robe Perlée\", prix: 4000 },\n    { nom: \"Robe Plissée\", prix: 4000 },\n    { nom: \"Robe Simple\", prix: 1800 },\n    { nom: \"Tailleur 2pc\", prix: 2500 }\n  ],\n  enfants: [\n    { nom: \"Baskets\", prix: 1500 },\n    { nom: \"Blouson 2pc\", prix: 1500 },\n    { nom: \"Chemise\", prix: 500 },\n    { nom: \"Costume 2pc\", prix: 1500 },\n    { nom: \"Couverture\", prix: 2500 },\n    { nom: \"Gandoura 3pc\", prix: 2000 },\n    { nom: \"Gilet Costume\", prix: 500 },\n    { nom: \"Jupe Simple\", prix: 800 },\n    { nom: \"Layette\", prix: 300 },\n    { nom: \"Nounours\", prix: 1000 },\n    { nom: \"Pantalon\", prix: 800 },\n    { nom: \"Robe Dentelle\", prix: 2000 },\n    { nom: \"Robe Perlée\", prix: 2000 },\n    { nom: \"Robe Plissée\", prix: 2000 },\n    { nom: \"Robe Simple\", prix: 1200 },\n    { nom: \"T-Shirt / Polo\", prix: 500 },\n    { nom: \"Veste\", prix: 800 }\n  ],\n  linge: [\n    { nom: \"2Draps + 2Taies\", prix: 2400 },\n    { nom: \"Couverture / Couette\", prix: 4000 },\n    { nom: \"Drap\", prix: 800 },\n    { nom: \"Housse De Chaise\", prix: 800 },\n    { nom: \"Housse De Couette\", prix: 1600 },\n    { nom: \"Housse De Matelas\", prix: 10000 },\n    { nom: \"Nappe De Table\", prix: 1000 },\n    { nom: \"Rideau (Au M)\", prix: 1600 },\n    { nom: \"Serviette A Main\", prix: 800 },\n    { nom: \"Serviette Grande\", prix: 1500 },\n    { nom: \"Serviette Moyenne\", prix: 1000 },\n    { nom: \"Taie D'oreiller\", prix: 400 },\n    { nom: \"Tapis (Au m²)\", prix: 2000 }\n  ],\n  bas: [\n    { nom: \"Bermuda\", prix: 300 },\n    { nom: \"Jeans\", prix: 1000 },\n    { nom: \"Jupe Droite\", prix: 1000 },\n    { nom: \"Jupe Longue\", prix: 1200 },\n    { nom: \"Jupe Plissée\", prix: 1500 },\n    { nom: \"Pantalon\", prix: 1000 },\n    { nom: \"Short\", prix: 900 }\n  ],\n  divers: [\n    { nom: \"Baskets\", prix: 2500 },\n    { nom: \"Casquette\", prix: 1000 },\n    { nom: \"Chapeau\", prix: 1500 },\n    { nom: \"Chaussures\", prix: 2500 },\n    { nom: \"Écharpe\", prix: 1000 },\n    { nom: \"Sac\", prix: 2000 }\n  ]\n};\n\n// Fonction pour obtenir tous les vêtements dans une liste plate\nexport const getAllVetements = () => {\n  const allVetements = [];\n  \n  Object.keys(tarifsData).forEach(category => {\n    tarifsData[category].forEach(item => {\n      allVetements.push({\n        ...item,\n        categorie: category\n      });\n    });\n  });\n  \n  return allVetements.sort((a, b) => a.nom.localeCompare(b.nom));\n};\n\n// Fonction pour trouver un vêtement par son nom\nexport const findVetementByName = (name) => {\n  for (const category of Object.keys(tarifsData)) {\n    const found = tarifsData[category].find(item => \n      item.nom.toLowerCase() === name.toLowerCase()\n    );\n    if (found) return found;\n  }\n  return null;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/config/api.js"],"sourcesContent":["\"use client\";\n\n// Configuration de l'API\nconst config = {\n  // URL de base de l'API - utilise l'API locale en développement\n  apiBaseUrl: typeof window !== 'undefined' && window.location.hostname === 'localhost'\n    ? \"http://localhost:5000/api\"\n    : process.env.NEXT_PUBLIC_API_URL || \"https://pressing-api.onrender.com/api\",\n  \n  // URL de secours en cas de besoin\n  fallbackApiUrl: \"https://pressing-api.onrender.com/api\"\n};\n\nexport default config;\n"],"names":[],"mappings":";;;AAAA;AAEA,yBAAyB;AACzB,MAAM,SAAS;IACb,+DAA+D;IAC/D,YAAY,6EAER,iEAAmC;IAEvC,kCAAkC;IAClC,gBAAgB;AAClB;uCAEe","debugId":null}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/authHelper.js"],"sourcesContent":["'use client';\n\n/**\n * Service d'authentification sécurisé pour interagir avec l'API backend\n * Version simplifiée\n */\n\n/**\n * Vérifie si le code s'exécute côté client (navigateur)\n * @returns {boolean} true si côté client, false si côté serveur\n */\nconst isClient = typeof window !== 'undefined';\n\n/**\n * Service d'authentification simplifié\n */\nconst authHelper = {\n  /**\n   * Récupère l'utilisateur depuis le localStorage\n   */\n  getCurrentUser: () => {\n    if (!isClient) return null;\n    \n    try {\n      const userStr = window.localStorage.getItem('user');\n      if (!userStr) return null;\n      return JSON.parse(userStr);\n    } catch (error) {\n      console.error('Erreur lors de la récupération utilisateur:', error);\n      return null;\n    }\n  },\n  \n  /**\n   * Récupère le token depuis le localStorage\n   */\n  getToken: () => {\n    if (!isClient) return null;\n    \n    try {\n      return window.localStorage.getItem('token');\n    } catch (error) {\n      console.error('Erreur lors de la récupération du token:', error);\n      return null;\n    }\n  },\n  \n  /**\n   * Vérifie si l'utilisateur est authentifié\n   */\n  isAuthenticated: () => {\n    return !!authHelper.getToken();\n  },\n  \n  /**\n   * Stocke les données utilisateur\n   */\n  setUserData: (user, token) => {\n    if (!isClient) return;\n    \n    try {\n      window.localStorage.setItem('token', token);\n      window.localStorage.setItem('user', JSON.stringify(user));\n    } catch (error) {\n      console.error('Erreur lors du stockage des données utilisateur:', error);\n    }\n  },\n  \n  /**\n   * Supprime les données utilisateur\n   */\n  clearUserData: () => {\n    if (!isClient) return;\n    \n    try {\n      window.localStorage.removeItem('token');\n      window.localStorage.removeItem('user');\n    } catch (error) {\n      console.error('Erreur lors de la suppression des données utilisateur:', error);\n    }\n  }\n};\n\nexport default authHelper;\n"],"names":[],"mappings":";;;AAAA;AAEA;;;CAGC,GAED;;;CAGC,GACD,MAAM,WAAW,gBAAkB;AAEnC;;CAEC,GACD,MAAM,aAAa;IACjB;;GAEC,GACD,gBAAgB;QACd,wCAAe,OAAO;;IAUxB;IAEA;;GAEC,GACD,UAAU;QACR,wCAAe,OAAO;;IAQxB;IAEA;;GAEC,GACD,iBAAiB;QACf,OAAO,CAAC,CAAC,WAAW,QAAQ;IAC9B;IAEA;;GAEC,GACD,aAAa,CAAC,MAAM;QAClB,wCAAe;;IAQjB;IAEA;;GAEC,GACD,eAAe;QACb,wCAAe;;IAQjB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/authService.js"],"sourcesContent":["'use client';\n\n/**\n * Service d'authentification pour interagir avec l'API backend\n */\n\n// URL de base de l'API\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\n\n// Import du helper d'authentification\nimport authHelper from './authHelper';\n\n/**\n * Service d'authentification simplifié\n */\nconst authService = {\n  /**\n   * Inscription d'un nouvel utilisateur\n   * @param {Object} userData - Données de l'utilisateur\n   * @returns {Promise<Object>} - Résultat de l'inscription\n   */\n  register: async (userData) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de l\\'inscription' };\n      }\n      \n      return { success: true, message: 'Inscription réussie' };\n    } catch (error) {\n      console.error('Erreur register:', error);\n      return { success: false, error: 'Erreur lors de l\\'inscription' };\n    }\n  },\n  \n  /**\n   * Connexion d'un utilisateur\n   * @param {string} email - Email de l'utilisateur\n   * @param {string} password - Mot de passe de l'utilisateur\n   * @returns {Promise<Object>} - Résultat de la connexion\n   */\n  login: async (email, password) => {\n    try {\n      const response = await fetch(`${API_URL}/auth/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la connexion' };\n      }\n      \n      // Stocker le token et les informations utilisateur\n      authHelper.setUserData(data.user, data.token);\n      \n      return { success: true, user: data.user };\n    } catch (error) {\n      console.error('Erreur login:', error);\n      return { success: false, error: 'Erreur lors de la connexion' };\n    }\n  },\n  \n  /**\n   * Déconnexion de l'utilisateur\n   */\n  logout: () => {\n    authHelper.clearUserData();\n  },\n  \n  /**\n   * Récupération de l'utilisateur actuel\n   * @returns {Object|null} - Utilisateur connecté ou null\n   */\n  getCurrentUser: () => {\n    return authHelper.getCurrentUser();\n  },\n  \n  /**\n   * Vérification si l'utilisateur est authentifié\n   * @returns {boolean} - true si l'utilisateur est authentifié\n   */\n  isAuthenticated: () => {\n    return authHelper.isAuthenticated();\n  },\n  \n  /**\n   * Récupération du token d'authentification\n   * @returns {string|null} - Token d'authentification\n   */\n  getToken: () => {\n    return authHelper.getToken();\n  }\n};\n\nexport default authService;\n"],"names":[],"mappings":";;;AASA,sCAAsC;AACtC;AAVA;AAEA;;CAEC,GAED,uBAAuB;AACvB,MAAM,UAAU,iEAAmC;;AAKnD;;CAEC,GACD,MAAM,cAAc;IAClB;;;;GAIC,GACD,UAAU,OAAO;QACf,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,cAAc,CAAC,EAAE;gBACvD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,OAAO,IAAI;gBAA0B;YAC5E;YAEA,OAAO;gBAAE,SAAS;gBAAM,SAAS;YAAsB;QACzD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,oBAAoB;YAClC,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAgC;QAClE;IACF;IAEA;;;;;GAKC,GACD,OAAO,OAAO,OAAO;QACnB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,WAAW,CAAC,EAAE;gBACpD,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO;gBAAS;YACzC;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,OAAO,IAAI;gBAAwB;YAC1E;YAEA,mDAAmD;YACnD,oIAAA,CAAA,UAAU,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK;YAE5C,OAAO;gBAAE,SAAS;gBAAM,MAAM,KAAK,IAAI;YAAC;QAC1C,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iBAAiB;YAC/B,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAA8B;QAChE;IACF;IAEA;;GAEC,GACD,QAAQ;QACN,oIAAA,CAAA,UAAU,CAAC,aAAa;IAC1B;IAEA;;;GAGC,GACD,gBAAgB;QACd,OAAO,oIAAA,CAAA,UAAU,CAAC,cAAc;IAClC;IAEA;;;GAGC,GACD,iBAAiB;QACf,OAAO,oIAAA,CAAA,UAAU,CAAC,eAAe;IACnC;IAEA;;;GAGC,GACD,UAAU;QACR,OAAO,oIAAA,CAAA,UAAU,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/services/serviceClient.js"],"sourcesContent":["'use client';\n\n/**\n * Service pour gérer les services de pressing\n */\n\nimport config from '../config/api';\nimport authService from './authService';\n\nconst API_URL = config.apiBaseUrl;\n\n/**\n * Service pour gérer les services de pressing\n */\nconst serviceClient = {\n  /**\n   * Créer un nouveau service\n   * @param {Object} serviceData - Données du service\n   * @returns {Promise<Object>} - Résultat de la création\n   */\n  createService: async (serviceData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(serviceData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { \n          success: false, \n          error: data.message || 'Échec de la création du service',\n          details: data.error \n        };\n      }\n      \n      return { success: true, data: data.data, message: data.message };\n    } catch (error) {\n      console.error('Erreur createService:', error);\n      return { success: false, error: 'Erreur lors de la création du service' };\n    }\n  },\n  \n  /**\n   * Récupérer tous les services du client\n   * @returns {Promise<Object>} - Liste des services\n   */\n  getClientServices: async () => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la récupération des services' };\n      }\n      \n      return { success: true, data: data.data };\n    } catch (error) {\n      console.error('Erreur getClientServices:', error);\n      return { success: false, error: 'Erreur lors de la récupération des services' };\n    }\n  },\n  \n  /**\n   * Récupérer un service spécifique\n   * @param {string} serviceId - ID du service\n   * @returns {Promise<Object>} - Détails du service\n   */\n  getServiceById: async (serviceId) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la récupération du service' };\n      }\n      \n      return { success: true, data: data.data };\n    } catch (error) {\n      console.error('Erreur getServiceById:', error);\n      return { success: false, error: 'Erreur lors de la récupération du service' };\n    }\n  },\n\n  /**\n   * Récupérer tous les types de services disponibles\n   * @param {Object} params - Paramètres optionnels (pagination, catégorie, etc.)\n   * @returns {Promise<Object>} - Liste des types de services\n   */\n  getServiceTypes: async (params = {}) => {\n    try {\n      // Construction de l'URL avec paramètres de requête\n      let url = `${API_URL}/service-types`;\n      const queryParams = new URLSearchParams();\n      \n      // Ajouter les paramètres s'ils sont fournis\n      if (params.categorie) queryParams.append('categorie', params.categorie);\n      if (params.page) queryParams.append('page', params.page);\n      if (params.limit) queryParams.append('limit', params.limit);\n      if (params.search) queryParams.append('search', params.search);\n      \n      // Ajouter les paramètres à l'URL si nécessaire\n      const queryString = queryParams.toString();\n      if (queryString) {\n        url += `?${queryString}`;\n      }\n      \n      // Les types de services sont publics, pas besoin de token\n      const response = await fetch(url);\n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { \n          success: false, \n          error: data.message || 'Échec de la récupération des types de services',\n          details: data.error \n        };\n      }\n      \n      return { success: true, data: data.data || data, pagination: data.pagination };\n    } catch (error) {\n      console.error('Erreur getServiceById:', error);\n      return { success: false, error: 'Erreur lors de la récupération du service' };\n    }\n  },\n  \n  /**\n   * Mettre à jour un service\n   * @param {string} serviceId - ID du service\n   * @param {Object} serviceData - Nouvelles données du service\n   * @returns {Promise<Object>} - Résultat de la mise à jour\n   */\n  updateService: async (serviceId, serviceData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(serviceData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la mise à jour du service' };\n      }\n      \n      return { success: true, data: data.data, message: data.message };\n    } catch (error) {\n      console.error('Erreur updateService:', error);\n      return { success: false, error: 'Erreur lors de la mise à jour du service' };\n    }\n  },\n  \n  /**\n   * Annuler un service\n   * @param {string} serviceId - ID du service\n   * @returns {Promise<Object>} - Résultat de l'annulation\n   */\n  cancelService: async (serviceId) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/services/${serviceId}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de l\\'annulation du service' };\n      }\n      \n      return { success: true, message: data.message };\n    } catch (error) {\n      console.error('Erreur cancelService:', error);\n      return { success: false, error: 'Erreur lors de l\\'annulation du service' };\n    }\n  },\n  \n  /**\n   * Mettre à jour les informations de sécurité du client\n   * @param {Object} securityData - Données de sécurité\n   * @returns {Promise<Object>} - Résultat de la mise à jour\n   */\n  updateSecurity: async (securityData) => {\n    try {\n      const token = authService.getToken();\n      \n      const response = await fetch(`${API_URL}/users/security`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(securityData)\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        return { success: false, error: data.message || 'Échec de la mise à jour des informations de sécurité' };\n      }\n      \n      return { success: true, message: data.message };\n    } catch (error) {\n      console.error('Erreur updateSecurity:', error);\n      return { success: false, error: 'Erreur lors de la mise à jour des informations de sécurité' };\n    }\n  }\n};\n\nexport default serviceClient;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 809, "column": 0}, "map": {"version":3,"sources":["file:///home/depayyy/Aboh%27s%20Projets/pressing/frontend/src/app/reservation/commande/page.jsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { tarifsData, getAllVetements } from '../../data/tarifsData';\nimport serviceClient from '../../services/serviceClient';\nimport authService from '../../services/authService';\nimport { FaShoppingCart, FaPlus, FaTrash, FaInfoCircle, FaTruck, FaCalendarAlt, FaMoneyBillWave, FaMapMarkerAlt } from 'react-icons/fa';\n\nexport default function CommandePage() {\n  const router = useRouter();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [panier, setPanier] = useState([]);\n  const [totalCommande, setTotalCommande] = useState(0);\n  const [fraisLivraison] = useState(1000); // Frais de livraison fixes à 3000 FCFA\n  const [dateCommande, setDateCommande] = useState('');\n  const [adresseLivraison, setAdresseLivraison] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  \n  // État pour un nouvel article\n  const [nouvelArticle, setNouvelArticle] = useState({\n    typeVetement: '',\n    couleur: '',\n    quantite: 1,\n    prixUnitaire: 0,\n    prixTotal: 0,\n    instructions: ''\n  });\n  \n  // Liste plate de tous les vêtements\n  const tousLesVetements = getAllVetements();\n  \n  // Couleurs disponibles\n  const couleurs = [\n  { nom: 'Rouge', classe: 'bg-red-500' },\n  { nom: 'Vert', classe: 'bg-green-500' },\n  { nom: 'Bleu', classe: 'bg-blue-500' },\n  { nom: 'Jaune', classe: 'bg-yellow-500' },\n  { nom: 'Orange', classe: 'bg-orange-500' },\n  { nom: 'Violet', classe: 'bg-purple-500' },\n  { nom: 'Rose', classe: 'bg-pink-500' },\n  { nom: 'Cyan', classe: 'bg-cyan-500' },\n  { nom: 'Turquoise', classe: 'bg-teal-500' },\n  { nom: 'Lime', classe: 'bg-lime-500' },\n  { nom: 'Indigo', classe: 'bg-indigo-500' },\n  { nom: 'Blanc', classe: 'bg-white border border-gray-300' },\n  { nom: 'Noir', classe: 'bg-black' },\n  { nom: 'Gris', classe: 'bg-gray-500' },\n  { nom: 'Ambre', classe: 'bg-amber-500' },\n  { nom: 'Émeraude', classe: 'bg-emerald-500' },\n  { nom: 'Fuchsia', classe: 'bg-fuchsia-500' },\n  { nom: 'Slate', classe: 'bg-slate-500' },\n  { nom: 'Zinc', classe: 'bg-zinc-500' },\n  { nom: 'Stone', classe: 'bg-stone-500' }\n];\n\n\n  // Vérifier si l'utilisateur est connecté\n  useEffect(() => { // { name: 'Services', path: '/dashboard/services', icon: <FaUsers /> },\n    const isAuth = authService.isAuthenticated();\n    setIsLoggedIn(isAuth);\n    \n    if (isAuth) {\n      // Récupérer les informations de l'utilisateur\n      const fetchUserData = async () => {\n        try {\n          const userData = await authService.getCurrentUser();\n          if (userData.success) {\n            setUser(userData.data);\n            // Pré-remplir l'adresse si disponible\n            if (userData.data.adresse) {\n              setAdresseLivraison(userData.data.adresse);\n            }\n          }\n        } catch (error) {\n          console.error('Erreur lors de la récupération des données utilisateur:', error);\n        }\n      };\n      fetchUserData();\n    } // { name: 'Services', path: '/dashboard/services', icon: <FaUsers /> },\n    \n    // Initialiser la date à aujourd'hui\n    const today = new Date();\n    const formattedDate = today.toISOString().split('T')[0];\n    setDateCommande(formattedDate);\n  }, []);\n\n  // Mettre à jour le prix unitaire lorsque le type de vêtement change\n  useEffect(() => {\n    if (nouvelArticle.typeVetement) {\n      const vetementSelectionne = tousLesVetements.find(v => v.nom === nouvelArticle.typeVetement);\n      if (vetementSelectionne) {\n        setNouvelArticle(prev => ({\n          ...prev,\n          prixUnitaire: vetementSelectionne.prix,\n          prixTotal: vetementSelectionne.prix * prev.quantite\n        }));\n      }\n    }\n  }, [nouvelArticle.typeVetement]);\n // { name: 'Services', path: '/dashboard/services', icon: <FaUsers /> },\n  // Mettre à jour le prix total lorsque la quantité change\n  useEffect(() => {\n    setNouvelArticle(prev => ({\n      ...prev,\n      prixTotal: prev.prixUnitaire * prev.quantite\n    }));\n  }, [nouvelArticle.quantite]);\n\n  // Calculer le total de la commande\n  useEffect(() => {\n    const total = panier.reduce((sum, item) => sum + item.prixTotal, 0);\n    setTotalCommande(total);\n  }, [panier]);\n\n  // Gérer le changement de type de vêtement\n  const handleTypeVetementChange = (e) => {\n    const typeVetement = e.target.value;\n    setNouvelArticle(prev => ({ ...prev, typeVetement }));\n  };\n\n  // Gérer le changement de couleur\n  const handleCouleurChange = (couleur) => {\n    setNouvelArticle(prev => ({ ...prev, couleur }));\n  };\n\n  // Gérer le changement de quantité\n  const handleQuantiteChange = (e) => {\n    const quantite = parseInt(e.target.value) || 1;\n    setNouvelArticle(prev => ({ ...prev, quantite }));\n  };\n\n  // Ajouter un article au panier\n  const ajouterAuPanier = () => {\n    if (!nouvelArticle.typeVetement || !nouvelArticle.couleur) {\n      alert('Veuillez sélectionner un type de vêtement et une couleur');\n      return;\n    }\n    \n    setPanier([...panier, { ...nouvelArticle, id: Date.now() }]);\n    \n    // Réinitialiser le formulaire\n    setNouvelArticle({\n      typeVetement: '',\n      couleur: '',\n      quantite: 1,\n      prixUnitaire: 0,\n      prixTotal: 0,\n      instructions: ''\n    });\n  };\n\n  // Supprimer un article du panier\n  const supprimerDuPanier = (id) => {\n    setPanier(panier.filter(item => item.id !== id));\n  };\n\n  // Valider la commande\n  const validerCommande = async () => {\n    if (!isLoggedIn) {\n      setErrorMessage('Veuillez vous connecter pour passer une commande');\n      setTimeout(() => {\n        router.push('/auth/login');\n      }, 2000);\n      return;\n    }\n\n    if (panier.length === 0) {\n      setErrorMessage('Votre panier est vide');\n      return;\n    }\n\n    setIsLoading(true);\n    setErrorMessage('');\n    \n    try {\n      // Préparer les données de la commande selon le modèle de service\n      // Vérifier si l'utilisateur est bien défini\n      if (!user) {\n        setErrorMessage('');\n        // On continue le processus sans rediriger vers login\n        // On utilisera un ID temporaire si nécessaire\n      }\n      \n      // Préparer les données du service avec ou sans utilisateur connecté\n      const serviceData = {\n        typeService: 'Pressing Standard',\n        date: dateCommande,\n        quantite: panier.reduce((sum, item) => sum + item.quantite, 0),\n        montant: totalCommande + fraisLivraison,\n        statut: 'En attente',\n        adresse: adresseLivraison || (user?.adresse || 'À renseigner'),\n        // Si l'utilisateur n'est pas disponible, on utilise 'client_temporaire' pour permettre\n        // au backend de créer une commande anonyme ou temporaire\n        client: user ? (user.id || user._id) : 'client_temporaire',\n        articles: panier.map(item => ({\n          type: item.typeVetement,\n          couleur: item.couleur,\n          quantite: item.quantite,\n          prixUnitaire: item.prixUnitaire,\n          prixTotal: item.prixTotal,\n          instructions: item.instructions || ''\n        }))\n      };\n\n      // Envoyer la commande au backend en utilisant le serviceClient\n      const result = await serviceClient.createService(serviceData);\n\n      if (result.success) {\n        setSuccessMessage('Votre commande a été passée avec succès!');\n        setPanier([]);\n        \n        // Rediriger vers la page des commandes après 2 secondes\n        setTimeout(() => {\n          router.push('/reservation/commande/commandes');\n        }, 2000);\n      } else {\n        setErrorMessage(result.error || 'Une erreur est survenue lors de la validation de votre commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la validation de la commande:', error);\n      setErrorMessage('Une erreur est survenue lors de la validation de votre commande');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 pt-16 pb-12\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-6 mt-8 flex items-center\">\n          {/* <FaShoppingCart className=\"mr-3 text-green-600\" />  */}\n          Passer une commande\n        </h1>\n        \n        {/* Messages de succès et d'erreur */}\n        {successMessage && (\n          <div className=\"mb-6 bg-green-50 border border-green-200 text-green-800 p-4 rounded-md flex items-center\">\n            <FaInfoCircle className=\"mr-2\" />\n            {successMessage}\n          </div>\n        )}\n        \n        {errorMessage && (\n          <div className=\"mb-6 bg-red-50 border border-red-200 text-red-800 p-4 rounded-md flex items-center\">\n            <FaInfoCircle className=\"mr-2\" />\n            {errorMessage}\n          </div>\n        )}\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Formulaire d'ajout d'article */}\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n              <FaPlus className=\"mr-2 text-blue-500\" /> \n              Ajouter un Article\n            </h2>\n            \n            <div className=\"space-y-4\">\n              {/* Type de vêtement */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type de Vêtement</label>\n                <select \n                  value={nouvelArticle.typeVetement} \n                  onChange={handleTypeVetementChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500\"\n                >\n                  <option value=\"\">Sélectionnez un type de vêtement</option>\n                  <optgroup label=\"Hauts\">\n                    {tarifsData.hauts.map((v, index) => (\n                      <option key={`haut-${index}`} value={v.nom}>{v.nom}</option>\n                    ))}\n                  </optgroup>\n                  <optgroup label=\"Ensembles\">\n                    {tarifsData.ensembles.map((v, index) => (\n                      <option key={`ensemble-${index}`} value={v.nom}>{v.nom}</option>\n                    ))}\n                  </optgroup>\n                  <optgroup label=\"Bas\">\n                    {tarifsData.bas.map((v, index) => (\n                      <option key={`bas-${index}`} value={v.nom}>{v.nom}</option>\n                    ))}\n                  </optgroup>\n                  <optgroup label=\"Divers\">\n                    {tarifsData.divers.map((v, index) => (\n                      <option key={`divers-${index}`} value={v.nom}>{v.nom}</option>\n                    ))}\n                  </optgroup>\n                </select>\n              </div>\n              \n              {/* Couleur */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Couleurs</label>\n                <div className=\"flex flex-wrap gap-2\">\n                  {couleurs.map((couleur, index) => (\n                    <button\n                      key={index}\n                      type=\"button\"\n                      onClick={() => handleCouleurChange(couleur.nom)}\n                      className={`w-8 h-8 rounded-full ${couleur.classe} ${nouvelArticle.couleur === couleur.nom ? 'ring-2 ring-offset-2 ring-green-500' : ''}`}\n                      title={couleur.nom}\n                    />\n                  ))}\n                </div>\n                {nouvelArticle.couleur && (\n                  <p className=\"mt-1 text-bold text-gray-600\">Couleur sélectionnée: {nouvelArticle.couleur}</p>\n                )}\n              </div>\n              \n              {/* Quantité */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Quantité</label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={nouvelArticle.quantite}\n                  onChange={handleQuantiteChange}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              \n              {/* Prix Unitaire */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Prix Unitaire</label>\n                <input\n                  type=\"text\"\n                  value={`${nouvelArticle.prixUnitaire.toLocaleString()} FCFA`}\n                  readOnly\n                  className=\"w-full p-2 bg-gray-100 border border-gray-300 rounded-md\"\n                />\n              </div>\n              \n              {/* Prix Total */}\n              {/* <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Prix Total</label>\n                <input\n                  type=\"text\"\n                  value={`${nouvelArticle.prixTotal.toLocaleString()} FCFA`}\n                  readOnly\n                  className=\"w-full p-2 bg-gray-100 border border-gray-300 rounded-md\"\n                />\n              </div> */}\n              \n              {/* Date de commande */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 flex items-center\">\n                  <FaCalendarAlt className=\"mr-1 text-amber-500\" /> Date\n                </label>\n                <input\n                  type=\"date\"\n                  value={dateCommande}\n                  onChange={(e) => setDateCommande(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                />\n              </div>\n\n              {/* Adresse de livraison */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 flex items-center\">\n                  <FaMapMarkerAlt className=\"mr-1 text-amber-500\" /> Adresse de livraison\n                </label>\n                <textarea\n                  value={adresseLivraison}\n                  onChange={(e) => setAdresseLivraison(e.target.value)}\n                  placeholder=\"Veuillez saisir l'adresse de livraison exacte\"\n                  rows=\"3\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                />\n              </div>\n              \n              {/* Instructions spéciales */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1 flex items-center\">\n                  <FaInfoCircle className=\"mr-1 text-amber-500\" /> Instructions spéciales\n                </label>\n                <textarea\n                  value={nouvelArticle.instructions}\n                  onChange={(e) => setNouvelArticle({...nouvelArticle, instructions: e.target.value})}\n                  placeholder=\"Ex: Attention particulière aux taches, repassage léger, etc.\"\n                  rows=\"2\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md focus:ring-amber-500 focus:border-amber-500\"\n                />\n              </div>\n              \n              {/* Bouton Ajouter au Panier */}\n              <div>\n                <button\n                  onClick={ajouterAuPanier}\n                  className=\"w-full bg-green-500 hover:bg-green-600 text-white font-medium py-2 px-4 rounded-md transition duration-300 flex items-center justify-center\"\n                >\n                  <FaPlus className=\"mr-2\" /> Ajouter au Panier\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Récapitulatif de la Commande */}\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-4 flex items-center\">\n              {/* <FaShoppingCart className=\"mr-2 text-green-500\" /> */}\n              Récapitulatif de la Commande\n            </h2>\n            \n            {panier.length > 0 ? (\n              <div>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">TYPE DE VÊTEMENT</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">COULEUR</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">QUANTITÉ</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">INSTRUCTIONS</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">PRIX TOTAL</th>\n                        <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ACTION</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {panier.map((item) => (\n                        <tr key={item.id}>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">{item.typeVetement}</td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">{item.couleur}</td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">{item.quantite}</td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            {item.instructions ? (\n                              <div className=\"max-w-xs truncate text-xs\">{item.instructions}</div>\n                            ) : (\n                              <span className=\"text-gray-400 text-xs italic\">Aucune</span>\n                            )}\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">{item.prixTotal.toLocaleString()} FCFA</td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <button\n                              onClick={() => supprimerDuPanier(item.id)}\n                              className=\"text-red-600 hover:text-red-900\"\n                            >\n                              Supprimer\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                \n                <div className=\"mt-6 border-t border-gray-200 pt-4\">\n                  <div className=\"flex justify-between py-2\">\n                    <span className=\"text-gray-600\">Total Commande</span>\n                    <span className=\"font-medium\">{totalCommande.toLocaleString()} FCFA</span>\n                  </div>\n                  <div className=\"flex justify-between py-2\">\n                    <span className=\"text-gray-600 flex items-center\">\n                      <FaTruck className=\"mr-2 text-gray-500\" /> Frais de livraison\n                    </span>\n                    <span className=\"font-medium\">{fraisLivraison.toLocaleString()} FCFA</span>\n                  </div>\n                  <div className=\"flex justify-between py-2 text-lg font-bold\">\n                    <span className=\"flex items-center\">\n                      <FaMoneyBillWave className=\"mr-2 text-green-600\" /> Total Général\n                    </span>\n                    <span>{(totalCommande + fraisLivraison).toLocaleString()} FCFA</span>\n                  </div>\n                </div>\n                \n                <div className=\"mt-6\">\n                  <button\n                    onClick={validerCommande}\n                    disabled={isLoading}\n                    className={`w-full bg-green-500 hover:bg-green-600 text-white font-medium py-3 px-4 rounded-md transition duration-300 flex items-center justify-center ${isLoading ? 'opacity-70 cursor-not-allowed' : ''}`}\n                  >\n                    {isLoading ? (\n                      <>\n                        <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                        </svg>\n                        Traitement en cours...\n                      </>\n                    ) : (\n                      'Valider le Panier'\n                    )}\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <p className=\"text-gray-500\">Votre panier est vide</p>\n                <p className=\"text-sm text-gray-400 mt-2\">Ajoutez des articles pour passer une commande</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}